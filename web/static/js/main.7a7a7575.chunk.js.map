{"version":3,"sources":["components/App/AppHeader/logo.svg","service-worker.ts","config/consts.ts","config/http/http.error.interceptor.ts","config/http/index.ts","config/http/http.request.interceptor.ts","config/http/http.response.interceptor.ts","repositories/auth-repository.ts","config/api-consts.ts","repositories/user-repository.ts","services/auth-service.ts","config/route-consts.ts","views/LoginView/LoginView.tsx","components/App/AppMenu/AppMenuItem/AppMenuItem.tsx","components/App/AppMenu/AppMenu.tsx","views/ResultView/ResultViewHook.tsx","repositories/ResultViewRepository.ts","views/ResultView/myTerminal.tsx","views/ResultView/WebSocket.tsx","repositories/FileRepository.ts","views/ResultView/LogTab.tsx","views/ResultView/ResultView.tsx","views/App/App.tsx","repositories/GenerateTreeRepository.ts","models/GenerateTreeRequest.ts","components/Form/CustomForm.tsx","views/GenerateTree/GenerateTree.tsx","newick/tools/parse.ts","repositories/TreeViewRepository.ts","views/TreeView/TreeView.tsx","config/routes.tsx","config/global-state.ts","components/LoadingScreen/LoadingScreen.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/ErrorScreen/ErrorScreen.tsx","index.tsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GOOGLE_CLIENT_ID","process","Error","BASE_URL","charAt","protocol","origin","API_BASE_URL","SOCKET_BASE_URL","APP_TITLE","a","response","status","authService","removeCredentials","JSON","stringify","data","Repository","requestInterceptor","FormData","headers","responseInterceptor","Blob","deserialize","errorInterceptor","httpConfig","withCredentials","baseURL","authRepository","url","this","httpObservable","post","kebabCase","pipe","map","tokenId","get","saveCredentials","authResponse","React","setGlobal","localStorage","setItem","accessToken","refreshToken","removeItem","redirectToLogin","href","redirectToHome","useGoogleLogin","useCallback","loginGoogle","subscribe","useAutoLogin","useGlobal","user","setUser","pathname","useLocation","useEffect","subscription","Subscription","unsubscribe","LoginView","useTranslation","translate","handleSuccess","handleFailure","className","classNames","clientId","onFailure","buttonText","SubMenu","AppMenuItem","item","display","routes","Array","length","key","name","icon","title","subItem","Item","to","path","Sider","Header","Content","Footer","AppMenu","menu","useState","collapsed","setState","toggleCollapsed","collapsible","breakpoint","onBreakpoint","broken","onCollapse","type","style","overflowX","height","position","left","top","zIndex","onClick","theme","mode","alt","src","logo","defaultSelectedKeys","marginTop","color","fontSize","textAlign","width","visibility","ResultViewContext","createContext","logs","setLogs","appendLog","removeLog","useResultView","useContext","ResultViewProvider","children","Provider","value","filter","li","_ResultViewRepository","MyTerminal","props","pushCommandToStdout","command","echo","promptLabel","pushToStdout","isEcho","pushToHistory","terminalInput","current","iqCommand","scrollToBottom","stdout","processing","Terminal","WebSocket","onJson","logLink","messageHistory","useRef","useWebSocket","onClose","e","lastMessage","lastJsonMessage","useMemo","concat","_FileRepository","responseType","LogTab","processedFile","onKill","onDeleteTab","visible","isShow","setShow","results","setResults","terminalOutput","setTerminalOutput","setStatus","percentage","setPercentage","setCurrent","total","setTotal","downloadingZip","setDownloadingZip","tooltipVisible","setTooltipVisible","handleDownloadZip","zip","filename","split","replace","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","killProcess","hideModal","setTimeout","statusComponent","yellow","primary","green","red","blue","indicator","LoadingOutlined","CheckCircleOutlined","CloseCircleOutlined","size","css","text","action","CloseSquareOutlined","stopPropagation","DownloadOutlined","tooltip","tooltipColor","modalBody","percent","Math","min","extra","BarChartOutlined","loading","CloseCircleFilled","commands","disabled","modalTitle","newMes","newTotal","newCurrent","newPercentage","parseFloat","toFixed","isNaN","content","lines","message","forEach","line","indexOf","numbers","parseInt","words","number","_percentage","autoAdjustOverflow","onVisibleChange","background","marginLeft","marginRight","maxWidth","overflow","whiteSpace","textOverflow","closeIcon","MinusSquareOutlined","centered","footer","onCancel","withRouter","setError","kill","logResults","deleteTab","getAll","bottom","right","alignItems","id","Layout","route","hasToken","hasUser","rootElement","getElementById","classList","add","remove","findIndex","r","margin","minHeight","renderRoutes","tip","_GenerateTreeRepository","GenerateTreeRequest","InputData","SubstitutionOption","BranchSupportAnalysis","SearchParameters","Model","AddColon","Panel","label","File","onChange","directory","beforeUpload","multiple","valuePropName","InboxOutlined","Toggle","RadioGroup","values","Group","Button","CheckBoxGroup","options","CheckBox","SelectGroup","vl","Option","Inputnumberr","rules","useForm","form","CreateUfBootFile","MaxIteration","MinCorrelation","NumberBootstrap","SingleBranchTest","ApproximateBayes","Replicates","SHaLRTTest","BootstrapAnalysis","AlignmentFile","GeneticCode","PartitionFile","PartitionType","SequenceType","UseExampleAlignmentFile","AscertainmentCorrection","FreeRateHeterogeneity","RateCategory","RateHeterogeneity","StateFrequency","SubstitutionModel","PerturbationStrength","StoppingRule","useExampleFile","setUseExampleFile","LabelData","inputData","parentComponent","child","header","toUpperCase","alignmentFile","getFieldsValue","useExampleAlignmentFile","sequenceType","geneticCode","partitionFile","partitionType","substitutionOption","substitutionModel","freeRateHeterogeneity","rateHeterogeneityOptions","rateCategory","required","stateFrequency","ascertainmentCorrection","branchSupportAnalysis","bootstrapAnalysis","numberBootstrap","max","createUfBootFile","maxIteration","defaultValue","step","minCorrelation","initialValue","singleBranchTest","decorate","nextId","sHaLRTTest","replicates","approximateBayes","searchParameters","perturbationStrength","stoppingRule","generate","initialValues","bordered","accordion","defaultActiveKey","expandIcon","isActive","CaretRightOutlined","rotate","CustomForm","onFieldsChange","parentName","parentDataStructure","dataStructure","myForm","Object","keys","newPath","formData","append","file","startGenerate","x","parse","s","subtree","ancestors","tree","tokens","i","token","branchset","push","pop","_TreeViewRepository","treeData","setTreeData","zoom","setZoom","y","translatePosition","setTranslate","setVisibility","pathFunction","setPathFunction","treeRef","createRef","center","offsetWidth","random","offsetHeight","tempData","loop","params","urlId","convertedTree","convertTree","attributes","ref","ExpandOutlined","block","ZoomInOutlined","ZoomOutOutlined","styles","nodes","node","circle","fill","stroke","leafNode","pathFunc","scaleExtent","nodeSvgShape","shape","shapeProps","separation","siblings","nonSiblings","component","App","HomeOutlined","exact","GenerateTree","BranchesOutlined","TreeView","AreaChartOutlined","ExperimentOutlined","initialGlobalState","language","getItem","undefined","LoadingScreen","ErrorBoundary","hasError","Fallback","fallback","Component","ErrorScreen","isValidNumber","subTitle","reload","TranslationRepository","AppEntry","lazy","translationService","initTranslation","addResource","translationVI","translationEN","changeLanguage","default","ReactDOM","render","Suspense","addEventListener","fetch","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7a7a7575.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.42ce16c1.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const GOOGLE_CLIENT_ID: string = process.env.REACT_APP_GOOGLE_CLIENT_ID ?? '';\n\nif (!GOOGLE_CLIENT_ID) {\n    throw new Error('Missing Google Client ID');\n}\n\nexport const BASE_URL: string\n    = (process.env.REACT_APP_BASE_URL && process.env.REACT_APP_BASE_URL.charAt(0) == ':') ? window.location.protocol + \"//\" + window.location.hostname + process.env.REACT_APP_BASE_URL : window.location.origin;\nif (!BASE_URL) {\n    throw new Error('Missing BASE_URL');\n}\n\nexport const API_BASE_URL: string\n    = (process.env.REACT_APP_API_BASE_URL && process.env.REACT_APP_API_BASE_URL.charAt(0) == ':') ? window.location.protocol + \"//\" + window.location.hostname + process.env.REACT_APP_API_BASE_URL : '';\nexport const SOCKET_BASE_URL: string\n    = (process.env.REACT_APP_SOCKET_BASE_URL && process.env.REACT_APP_SOCKET_BASE_URL.charAt(0) == ':') ?\n    (window.location.protocol == \"https:\" ? \"wss:\" : \"ws:\") + \"//\" + window.location.hostname + process.env.REACT_APP_SOCKET_BASE_URL : '';\nexport const IS_DEVELOPMENT: boolean = process.env.NODE_ENV === 'development';\nexport const APP_TITLE: string = process.env.REACT_APP_TITLE ?? '';\n","import {AxiosError} from 'axios';\nimport {authService} from 'services/auth-service';\n\nexport async function errorInterceptor(error: AxiosError) {\n    if (error?.response?.status) {\n        switch (error.response.status) {\n            case 401:\n                await authService.removeCredentials();\n                break;\n            case 404:\n                throw new Error(\"700\");\n            default:\n                // do nothing\n                break;\n        }\n        throw new Error(JSON.stringify(error.response.data));\n    }\n    return error;\n}\n","import {AxiosRequestConfig} from 'axios';\nimport {API_BASE_URL} from 'config/consts';\nimport {Repository} from 'react3l/core';\nimport {requestInterceptor} from 'config/http/http.request.interceptor';\nimport {responseInterceptor} from 'config/http/http.response.interceptor';\nimport {errorInterceptor} from 'config/http/http.error.interceptor';\n\nRepository.requestInterceptor = requestInterceptor;\n\nRepository.responseInterceptor = responseInterceptor;\n\nRepository.errorInterceptor = errorInterceptor;\n\nexport const httpConfig: AxiosRequestConfig = {\n  withCredentials: false,\n  baseURL: API_BASE_URL,\n};","import {AxiosRequestConfig} from 'axios';\nimport {transformKeys} from 'react3l/helpers/naming-convention';\nimport {serialize} from 'react3l/helpers';\nimport nameof from 'ts-nameof.macro';\nimport initialGlobalState from 'config/global-state';\n\nexport function requestInterceptor(config: AxiosRequestConfig) {\n  if (config.data instanceof FormData) {\n    config.headers['Content-Type'] = 'multipart/form-data';\n    return config;\n  }\n  config.headers['Content-Type'] = 'multipart/form-data';\n  // const accessToken: string | null = localStorage.getItem(nameof(initialGlobalState.accessToken));\n  // if (accessToken) {\n  //   if (!config.headers['Authorization']) {\n  //     config.headers.Authorization = `Bearer ${accessToken}`;\n  //   }\n  // }\n  // if (typeof config.data === 'object' && config.data !== null) {\n  //   config.data = transformKeys(config.data, 'camelCase');\n  //   config.data = serialize(config.data);\n  // }\n  return config;\n}\n","import {AxiosResponse} from 'axios';\nimport {deserialize} from 'react3l/helpers';\n\nexport function responseInterceptor(response: AxiosResponse) {\n    if (typeof response.data === 'object' && response.data !== null) {\n        if(response.data instanceof Blob) {}\n        else {response.data = deserialize(response.data);}\n            // console.log(response.data);\n        // response.data = transformKeys(response.data, 'camelCase');\n\n    }\n    return response;\n}\n","import {Repository} from 'react3l/core';\nimport {httpConfig} from 'config/http';\nimport {API_BASE_URL} from 'config/consts';\nimport {url} from 'react3l/helpers/path';\nimport {API_AUTH_LOGIN_GOOGLE_ROUTE, API_AUTH_ROUTE} from 'config/api-consts';\nimport nameof from 'ts-nameof.macro';\nimport {kebabCase} from 'react3l/helpers';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {AxiosResponse} from 'axios';\n\nexport type AuthTokenResponse = { accessToken: string; refreshToken: string };\n\nexport class AuthRepository extends Repository {\n  constructor() {\n    super(httpConfig);\n    this.baseURL = url(API_BASE_URL, API_AUTH_ROUTE);\n  }\n\n  public accessToken<T = { accessToken: string; refreshToken: string }>(): Observable<T> {\n    return this.httpObservable.post<T>(kebabCase(nameof(this.accessToken)), {})\n        .pipe(map((response: AxiosResponse<T>) => response.data));\n  }\n\n  public loginGoogle(tokenId: string): Observable<AuthTokenResponse> {\n    return this.httpObservable.post<AuthTokenResponse>(API_AUTH_LOGIN_GOOGLE_ROUTE, {tokenId})\n        .pipe(map((response: AxiosResponse<AuthTokenResponse>) => response.data));\n  }\n}\n\nexport const authRepository: AuthRepository = new AuthRepository();\n","export const API_AUTH_ROUTE: string = 'auth';\n\nexport const API_AUTH_LOGIN_GOOGLE_ROUTE: string = 'login/google';\n\nexport const API_USER_ROUTE: string = 'users';\nexport const API_GENERATE_TREE_ROUTE: string = 'generate-tree';\nexport const API_RESULT_VIEW: string = 'log';\nexport const API_TREE_VIEW: string = 'tree';\nexport const API_FILE: string = 'file';\n","import {Repository} from 'react3l/core';\nimport {httpConfig} from 'config/http';\nimport {kebabCase, url} from 'react3l/helpers';\nimport {API_BASE_URL} from 'config/consts';\nimport {API_USER_ROUTE} from 'config/api-consts';\nimport {Observable} from 'rxjs';\nimport {User} from 'models/User';\nimport nameof from 'ts-nameof.macro';\nimport {map} from 'rxjs/operators';\nimport {AxiosResponse} from 'axios';\n\nexport class UserRepository extends Repository {\n  constructor() {\n    super(httpConfig);\n    this.baseURL = url(API_BASE_URL, API_USER_ROUTE);\n  }\n\n  public current(): Observable<User> {\n    return this.httpObservable.get<User>(kebabCase(nameof(this.current)))\n      .pipe(\n        map((response: AxiosResponse<User>) => response.data),\n      );\n  }\n}\n\nexport const userRepository: UserRepository = new UserRepository();\n","import React from 'reactn';\nimport {GoogleLoginResponse, GoogleLoginResponseOffline} from 'react-google-login';\nimport {authRepository, AuthTokenResponse} from 'repositories/auth-repository';\nimport nameof from 'ts-nameof.macro';\nimport initialGlobalState, {GlobalState} from 'config/global-state';\nimport {userRepository} from 'repositories/user-repository';\nimport {Subscription} from 'rxjs';\nimport {useLocation} from 'react-router-dom';\nimport {HOME_ROUTE, LOGIN_ROUTE} from 'config/route-consts';\nimport {User} from 'models/User';\n\nexport const authService = {\n  async saveCredentials(authResponse: AuthTokenResponse) {\n    await React.setGlobal<GlobalState>(authResponse);\n    localStorage.setItem(nameof(authResponse.accessToken), authResponse.accessToken);\n    localStorage.setItem(nameof(authResponse.refreshToken), authResponse.refreshToken);\n  },\n\n  async removeCredentials() {\n    await React.setGlobal<GlobalState>({\n      accessToken: null,\n      refreshToken: null,\n    });\n    localStorage.removeItem(nameof(initialGlobalState.accessToken));\n    localStorage.removeItem(nameof(initialGlobalState.refreshToken));\n    authService.redirectToLogin();\n  },\n\n  redirectToLogin() {\n    window.location.href = LOGIN_ROUTE;\n  },\n\n  redirectToHome() {\n    window.location.href = HOME_ROUTE;\n  },\n\n  useGoogleLogin(): [\n    (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void,\n    (error: Error) => void,\n  ] {\n    const handleSuccess = React.useCallback(\n      (response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n        if ('accessToken' in response) {\n          authRepository.loginGoogle(response.tokenId)\n            .subscribe(\n              async (authResponse) => {\n                await this.saveCredentials(authResponse);\n              },\n            );\n        }\n      },\n      [],\n    );\n\n    const handleFailure = React.useCallback(\n      (error: Error) => {\n        console.log(error);\n      },\n      [],\n    );\n\n    return [\n      handleSuccess,\n      handleFailure,\n    ];\n  },\n\n  useAutoLogin(): [\n    boolean,\n    boolean,\n  ] {\n    const [accessToken] = React.useGlobal<GlobalState, 'accessToken'>('accessToken');\n    const [user, setUser] = React.useGlobal<GlobalState, 'user'>('user');\n    const {pathname} = useLocation();\n\n    let hasToken: boolean = typeof accessToken === 'string' && accessToken !== '';\n\n    let hasUser: boolean = !!user;\n\n    //Todo: Fixed Value\n    hasUser = true;\n    hasToken = true;\n\n    React.useEffect(\n      () => {\n        const subscription: Subscription = new Subscription();\n\n        if (!hasUser) {\n          /**\n           * If user is not authenticated\n           */\n          if (hasToken) {\n            subscription.add(\n              userRepository.current()\n                .subscribe(\n                  async (user: User) => {\n                    await setUser(user);\n                  },\n                ),\n            );\n          } else {\n            if (pathname !== LOGIN_ROUTE) {\n              authService.redirectToLogin();\n            }\n          }\n        } else {\n          /**\n           * If user is authenticated\n           */\n          if (pathname === LOGIN_ROUTE) {\n            authService.redirectToHome();\n          }\n        }\n\n        return function cleanup() {\n          subscription.unsubscribe();\n        };\n      },\n      [hasToken, hasUser, pathname, setUser, user],\n    );\n\n    return [\n      hasToken,\n      hasUser,\n    ];\n  },\n};\n","export const HOME_ROUTE: string = '/';\n\nexport const LOGIN_ROUTE: string = '/login';\n\nexport const USER_ROUTE: string = '/user';\n\nexport const I18N_ROUTE: string = 'i18n';\n","import React from 'react';\nimport './LoginView.scss';\nimport GoogleLogin from 'react-google-login';\nimport {GOOGLE_CLIENT_ID} from 'config/consts';\nimport {authService} from 'services/auth-service';\nimport classNames from 'classnames';\nimport Spin from 'antd/lib/spin';\nimport {useTranslation} from 'react-i18next';\n\nfunction LoginView() {\n    const [translate] = useTranslation();\n\n    const [handleSuccess, handleFailure] = authService.useGoogleLogin();\n\n    // const [hasToken, hasUser] = authService.useAutoLogin();\n    const [hasToken, hasUser] = [false, false];\n\n    return (\n        <div className={classNames('page', 'login')}>\n            {!hasToken && !hasUser && (\n                <GoogleLogin\n                    clientId={GOOGLE_CLIENT_ID}\n                    onFailure={handleFailure}\n                    onSuccess={handleSuccess}\n                    buttonText={translate('login.withGoogle')}\n                />\n            )}\n            {hasToken && !hasUser && (\n                <Spin tip={translate('login.loggingInWithGoogle')}/>\n            )}\n        </div>\n    );\n}\n\nexport default LoginView;\n","import React from 'react';\nimport './AppMenuItem.scss';\nimport {RouteConfig} from 'react-router-config';\nimport {Menu} from \"antd\";\nimport {Link} from \"react-router-dom\";\n\nconst {SubMenu} = Menu;\n\nexport interface AppMenuItemProps {\n    item: RouteConfig;\n}\n\nfunction AppMenuItem({item}: AppMenuItemProps) {\n    if (!item.display) return null;\n    if (item.routes instanceof Array && item.routes.length > 0) {\n        let test = (\n            <SubMenu key={item.name} icon={item.icon}\n                     title={item.name}>\n                {item.routes.map(subItem => {\n                    return AppMenuItem({item: subItem})\n                })}\n            </SubMenu>\n        );\n        return test;\n    }\n    return (<Menu.Item key={item.name} icon={item.icon}>\n        <Link to={item.path as string}>\n            {item.name}\n        </Link>\n    </Menu.Item>)\n}\n\nexport default AppMenuItem;\n","import React, {useState} from 'react';\nimport 'components/App/AppMenu/AppMenu.scss';\nimport {RouteConfig} from 'react-router-config';\nimport {Layout, Menu} from \"antd\";\nimport logo from \"../AppHeader/logo.svg\";\nimport {APP_TITLE, BASE_URL} from \"../../../config/consts\";\nimport AppMenuItem from \"./AppMenuItem/AppMenuItem\";\n\nconst {Header, Content, Footer, Sider} = Layout;\n\nexport interface AppMenuProps {\n    menu?: RouteConfig[];\n}\n\nfunction AppMenu({menu}: AppMenuProps) {\n    const GoBackToHomePage = () => {\n        window.location.href = BASE_URL;\n    }\n    console.log(menu);\n    const [state, setState] = useState({collapsed: false});\n    const toggleCollapsed = () => {\n        setState({\n            collapsed: !state.collapsed,\n        });\n    };\n    //\n    // return (\n    //     <div style={{width: 256}}>\n    //\n    //         <Menu\n    //             defaultSelectedKeys={['1']}\n    //             defaultOpenKeys={['sub1']}\n    //             mode=\"inline\"\n    //             theme=\"dark\"\n    //         >\n    //             <Menu.Item key=\"1\" icon={<UploadOutlined/>}>\n    //                 Option 1\n    //             </Menu.Item>\n    //             <Menu.Item key=\"2\" icon={<UploadOutlined/>}>\n    //                 Option 2\n    //             </Menu.Item>\n    //             <Menu.Item key=\"3\" icon={<UploadOutlined/>}>\n    //                 Option 3\n    //             </Menu.Item>\n    //             <SubMenu key=\"sub1\" icon={<UploadOutlined/>} title=\"Navigation One\">\n    //                 <Menu.Item key=\"5\">Option 5</Menu.Item>\n    //                 <Menu.Item key=\"6\">Option 6</Menu.Item>\n    //                 <Menu.Item key=\"7\">Option 7</Menu.Item>\n    //                 <Menu.Item key=\"8\">Option 8</Menu.Item>\n    //             </SubMenu>\n    //             <SubMenu key=\"sub2\" icon={<UploadOutlined/>} title=\"Navigation Two\">\n    //                 <Menu.Item key=\"9\">Option 9</Menu.Item>\n    //                 <Menu.Item key=\"10\">Option 10</Menu.Item>\n    //                 <SubMenu key=\"sub3\" title=\"Submenu\">\n    //                     <Menu.Item key=\"11\">Option 11</Menu.Item>\n    //                     <Menu.Item key=\"12\">Option 12</Menu.Item>\n    //                 </SubMenu>\n    //             </SubMenu>\n    //         </Menu>\n    //     </div>\n    // );\n    return (\n        <>\n            <Sider\n                collapsible collapsed={state.collapsed}\n                breakpoint=\"lg\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    toggleCollapsed();\n                    console.log(collapsed, type);\n                }}>\n            </Sider>\n            <Sider\n                style={{\n                    overflowX: 'hidden',\n                    height: 'calc(100vh - 48px)',\n                    position: 'fixed',\n                    left: 0,\n                    top: 0,\n                    zIndex: 999\n                }}\n                collapsed={state.collapsed}\n                collapsible\n                breakpoint=\"lg\"\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}\n                onCollapse={(collapsed, type) => {\n                    toggleCollapsed();\n                    console.log(collapsed, type);\n                }}>\n                <div style={{height: \"calc(100vh - 70px)\"}}>\n                    <div className=\"logo\" onClick={GoBackToHomePage}>\n                        <Menu theme=\"dark\" mode=\"inline\">\n                            <Menu.Item key=\"1\" className={\"logo-container\"}\n                                       icon={<img alt={'d'} className=\"app-logo-image\" src={logo}/>}>\n                                <b>{APP_TITLE}</b>\n                            </Menu.Item>\n                        </Menu>\n                    </div>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        {menu && menu.map((item) =>\n                            item.display ? AppMenuItem({item: item}) : null\n                        )}\n                    </Menu>\n                    <div style={{\n                        marginTop: \"1rem\",\n                        color: \"gray\",\n                        fontSize: \"small\",\n                        textAlign: \"center\",\n                        width: \"100%\",\n                        visibility: (state.collapsed ? \"hidden\" : \"visible\")\n                    }}>\n                        <div>IQ-TREE ©2020</div>\n                        {/*<div>Created by SonNT-UET</div>*/}\n                    </div>\n                </div>\n\n            </Sider>\n        </>\n\n    );\n}\n\nexport default AppMenu;\n","import React, {createContext, useContext, useState} from \"react\";\nimport {Log} from \"../../models/Log\";\nimport ErrorBoundary from \"../../components/ErrorBoundary/ErrorBoundary\";\nimport ErrorScreen from \"../../components/ErrorScreen/ErrorScreen\";\n\nconst ResultViewContext = createContext({\n    logs: [] as Log[],\n    setLogs: null as any,\n    appendLog: null as any,\n    removeLog: null as any,\n});\nexport const useResultView = () => useContext(ResultViewContext);\n\nexport default function ResultViewProvider({children}: { children: any }) {\n    const [logs, setLogs] = useState([] as Log[]);\n    const appendLog = (log: Log) => {\n        setLogs([...logs.filter(li => log.url != li.url), log])\n    }\n    const removeLog = (log: Log) => {\n        setLogs(logs.filter(li => log.url != li.url));\n    }\n    return (\n        // <ErrorBoundary fallback={ErrorScreen}>\n            <ResultViewContext.Provider value={{logs, setLogs, appendLog, removeLog}}>\n                {children}\n            </ResultViewContext.Provider>\n        // </ErrorBoundary>\n\n    )\n}","import {Repository} from 'react3l/core';\nimport {httpConfig} from 'config/http';\nimport {API_BASE_URL} from 'config/consts';\nimport {url} from 'react3l/helpers/path';\nimport {API_RESULT_VIEW} from 'config/api-consts';\nimport nameof from 'ts-nameof.macro';\nimport {kebabCase} from 'react3l/helpers';\nimport {map} from 'rxjs/operators';\nimport {AxiosResponse} from 'axios';\nimport {Observable} from \"rxjs\";\nimport {Log} from \"../models/Log\";\n\nexport type AuthTokenResponse = { accessToken: string; refreshToken: string };\n\nexport class GenerateTreeRepository extends Repository {\n    constructor() {\n        super(httpConfig);\n        console.log(this.baseURL);\n        this.baseURL = url(API_BASE_URL, API_RESULT_VIEW);\n        console.log(this.baseURL);\n    }\n\n\n    public getAll(): Observable<Log[]> {\n        return this.httpObservable.get(kebabCase(nameof(this.getAll)))\n            .pipe(map((response: AxiosResponse) => response.data));\n    }\n\n    public kill(url: string): Observable<any> {\n        return this.httpObservable.get(kebabCase(nameof(this.kill)) + '/' + url)\n            .pipe(map((response: AxiosResponse) => response.data));\n    }\n}\n\nexport const _ResultViewRepository: GenerateTreeRepository = new GenerateTreeRepository();\n","import React from \"react\";\nimport Terminal from \"react-console-emulator\";\n\nexport default class MyTerminal extends Terminal {\n    constructor(props: any) {\n        super(props);\n    }\n\n    componentDidUpdate() {\n        (this as any).terminalInput.current.value = this.props.iqCommand ?? '';\n        (this as any).scrollToBottom();\n    }\n\n    render() {\n        (this as any).state.stdout = [...this.props.stdout];\n        (this as any).state.processing = {...this.props.processing}\n        return super.render();\n    }\n\n    pushCommandToStdout = (command: string) => {\n        const echo = (<span>{(this as any).props.promptLabel || '$'} {command}</span>);\n        (this as any).pushToStdout(echo, {isEcho: true});\n        (this as any).pushToHistory(command);\n    }\n}","import {useEffect, useMemo, useRef} from 'react';\nimport useWebSocket from 'react-use-websocket';\n\nconst getWSPoint = () => \"ws://\" + window.location.hostname;\n\nexport const WebSocket = ({onJson, logLink}: { onJson: Function, logLink: string }) => {\n    const messageHistory = useRef<MessageEvent[]>([]);\n    const {\n        lastMessage,\n        lastJsonMessage\n    } = useWebSocket((logLink === '' ? getWSPoint() + ':8080/LogEndpoint/0A8350C5B7EF735968D84D20535A76E3-aln02455' : logLink), {\n        onClose: (e) => {\n            console.log(e)\n        }\n    });\n    messageHistory.current = useMemo(() =>\n        messageHistory.current.concat(lastMessage), [lastMessage]);\n    //\n    // const handleClickChangeSocketUrl = useCallback(() =>\n    //     setSocketUrl('wss://demos.kaazing.com/echo'), []);\n    //\n    // const handleClickSendMessage = useCallback(() =>\n    //     sendMessage('Hello'), []);\n    //\n    // const connectionStatus = {\n    //     [ReadyState.CONNECTING]: 'Connecting',\n    //     [ReadyState.OPEN]: 'Open',\n    //     [ReadyState.CLOSING]: 'Closing',\n    //     [ReadyState.CLOSED]: 'Closed',\n    //     [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n    // }[readyState];\n    // if (logLink == '') return null;\n    // console.log(lastJsonMessage)\n    useEffect(() => {\n        onJson(lastJsonMessage);\n    }, [lastJsonMessage]);\n    // const x: any = React.createRef();\n    // console.log(messageHistory)\n    // let t = messageHistory.current\n    //     .map((message) => {\n    //         console.log(x, message);\n    //         return message ? JSON.parse(message.data).status : \"\";\n    //         // if(x.current) return  x.current.pushToStdout(message ? JSON.parse(message.data).status : \"\");\n    //         // return null;\n    //     });\n    //\n    // return (\n    //\n    //     <div>\n    //         {/*<button*/}\n    //         {/*    onClick={handleClickChangeSocketUrl}*/}\n    //         {/*>*/}\n    //         {/*    Click Me to change Socket Url*/}\n    //         {/*</button>*/}\n    //         {/*<button*/}\n    //         {/*    onClick={handleClickSendMessage}*/}\n    //         {/*    disabled={readyState !== ReadyState.OPEN}*/}\n    //         {/*>*/}\n    //         {/*    Click Me to send 'Hello'*/}\n    //         {/*</button>*/}\n    //         <span>The WebSocket is currently {connectionStatus}</span>\n    //         {lastMessage ? <span>Last message: {JSON.parse(lastMessage.data).status}</span> : null}\n    //         <ul>\n    //             {messageHistory.current\n    //                 .map((message, idx) => <span key={idx}>{message ? JSON.parse(message.data).content : \"\"}</span>)}\n    //         </ul>\n    //     </div>\n    // )\n    return null;\n};","import {Repository} from 'react3l/core';\nimport {httpConfig} from 'config/http';\nimport {API_BASE_URL} from 'config/consts';\nimport {url} from 'react3l/helpers/path';\nimport {API_FILE, API_RESULT_VIEW} from 'config/api-consts';\nimport nameof from 'ts-nameof.macro';\nimport {kebabCase} from 'react3l/helpers';\nimport {map} from 'rxjs/operators';\nimport {AxiosResponse} from 'axios';\nimport {Observable} from \"rxjs\";\nimport {Log} from \"../models/Log\";\n\nexport type AuthTokenResponse = { accessToken: string; refreshToken: string };\n\nexport class FileRepository extends Repository {\n    constructor() {\n        super(httpConfig);\n        console.log(this.baseURL);\n        this.baseURL = url(API_BASE_URL, API_FILE);\n        console.log(this.baseURL);\n    }\n\n\n    public getAll(): Observable<Log[]> {\n        return this.httpObservable.get(kebabCase(nameof(this.getAll)))\n            .pipe(map((response: AxiosResponse) => response.data));\n    }\n\n    public zip(url: string): Observable<any> {\n        return this.httpObservable.get(kebabCase(nameof(this.zip)) + '/' + url,{\n            responseType: 'blob',\n        })\n            // .pipe(map((response: AxiosResponse<Blob>) => response.data));\n    }\n}\n\nexport const _FileRepository: FileRepository = new FileRepository();\n","import React from 'reactn';\nimport './ResultView.scss';\nimport {NavLink} from 'react-router-dom';\nimport {Button, Modal, Progress, Result, Spin, Tooltip} from \"antd\";\nimport {\n    BarChartOutlined,\n    CheckCircleOutlined,\n    CloseCircleFilled,\n    CloseCircleOutlined,\n    CloseSquareOutlined,\n    DownloadOutlined,\n    LoadingOutlined,\n    MinusSquareOutlined\n} from '@ant-design/icons';\nimport {blue, green, red, yellow} from '@ant-design/colors';\nimport {useEffect, useState} from \"react\";\nimport MyTerminal from \"./myTerminal\";\nimport {WebSocket} from \"./WebSocket\";\nimport {SOCKET_BASE_URL} from \"../../config/consts\";\nimport {Log} from \"../../models/Log\";\nimport {PulseLoader} from \"react-spinners\";\nimport {_FileRepository} from \"../../repositories/FileRepository\";\nimport {useTranslation} from \"react-i18next\";\n\nexport const LogTab = ({url, processedFile, onKill,onDeleteTab, visible}: Log & { onKill: any, onDeleteTab:any }) => {\n    const [translate] = useTranslation();\n    const [isShow, setShow] = useState(visible);\n    const [results, setResults] = useState([] as any[]);\n    const [terminalOutput, setTerminalOutput] = useState([] as any[]);\n    const [status, setStatus] = useState('Connecting');\n    const [percentage, setPercentage] = useState(0);\n    const [current, setCurrent] = useState(0);\n    const [total, setTotal] = useState(0);\n    const [downloadingZip, setDownloadingZip] = useState(false);\n    const [showTerminal, setShowTerminal] = useState(false);\n    const [tooltipVisible, setTooltipVisible] = useState(false);\n    const handleDownloadZip = () => {\n        setDownloadingZip(true);\n        _FileRepository.zip(url).subscribe(response => {\n            const headerval = response.headers['content-disposition'];\n            const filename = headerval.split(';')[1].split('=')[1].replace('\"', '').replace('\"', '');\n            if (window.navigator.msSaveOrOpenBlob != null) {\n                window.navigator.msSaveBlob(response.data, filename);\n            } else {\n                const elem = window.document.createElement('a');\n                elem.href = window.URL.createObjectURL(response.data);\n                elem.download = filename;\n                document.body.appendChild(elem);\n                elem.click();\n                document.body.removeChild(elem);\n            }\n            setDownloadingZip(false);\n        }, error => {\n            setDownloadingZip(false);\n            throw error;\n        })\n    }\n    const killProcess = () => {\n        setStatus('Canceling');\n        onKill(url);\n    }\n\n    const deleleTab = () => {\n        // setStatus('Canceling');\n        onDeleteTab(url);\n    }\n    const showModal = () => {\n        setShow(true);\n    };\n\n    const hideModal = () => {\n        setShow(false);\n    };\n\n    const handleOk = () => {\n        // setShow(false);\n        // setState({...state, loading: true});\n        // setTimeout(() => {\n        //     setState({loading: false, visible: false});\n        // }, 3000);\n    };\n\n    const handleCancel = () => {\n        setShow(false);\n        if(status == \"Canceled\"){\n            onDeleteTab(url);\n        }\n    };\n\n    useEffect(() => {\n        setTooltipVisible(true);\n        setTimeout(() => {\n            setTooltipVisible(false);\n        }, 3000);\n    }, [status]);\n\n    const statusComponent: any = {\n        color: {\n            \"Processing\": yellow.primary,\n            \"Success\": green.primary,\n            \"Error\": red.primary,\n            \"Connecting\": blue.primary,\n            \"Canceled\": red.primary,\n            \"Canceling\": yellow.primary,\n        },\n        indicator: {\n            // \"Processing\": (<><Spin indicator={<LoadingOutlined/>}/> <span\n            //     style={{color: blue.primary}}>{percentage + '%'}</span></>),\n            \"Processing\": (<Spin indicator={<LoadingOutlined/>}/>),\n            \"Canceling\": (<Spin indicator={<LoadingOutlined/>}/>),\n            \"Success\": (<CheckCircleOutlined/>),\n            \"Error\": (<CloseCircleOutlined/>),\n            \"Canceled\": (<CloseCircleOutlined/>),\n            \"Connecting\": (<PulseLoader size={3} css={'display:contents'}/>),\n        },\n        text: {\n            \"Connecting\": translate(\"logWebsocket.connecting\"),\n            \"Canceling\": translate(\"logWebsocket.canceling\"),\n            \"Error\": translate(\"logWebsocket.error\"),\n            \"Canceled\": translate(\"logWebsocket.canceled\"),\n            \"Success\": translate(\"logWebsocket.success\"),\n            \"Processing\": translate(\"logWebsocket.processing\"),\n        },\n        action: {\n            \"Connecting\": (<><CloseSquareOutlined onClick={killProcess}/></>),\n            \"Canceling\": (<><CloseSquareOutlined onClick={killProcess}/></>),\n            \"Error\": (<><CloseSquareOutlined onClick={killProcess}/></>),\n            \"Canceled\": (<><CloseSquareOutlined onClick={deleleTab}/></>),\n            \"Success\": (<><span onClick={(e) => {\n                e.stopPropagation();\n                handleDownloadZip();\n            }}>\n                {downloadingZip ? <LoadingOutlined/> : <DownloadOutlined/>}\n            </span><CloseSquareOutlined onClick={killProcess}/></>),\n            \"Processing\": (<><CloseSquareOutlined onClick={killProcess}/></>)\n        },\n        tooltip: {\n            \"Connecting\": (<>{translate(\"logWebsocket.connecting\")}</>),\n            \"Canceling\": (<>{translate(\"logWebsocket.canceling\")}</>),\n            \"Error\": (<>{translate(\"logWebsocket.error\")}</>),\n            \"Canceled\": (<>{translate(\"logWebsocket.canceled\")}</>),\n            \"Success\": (<>{translate(\"logWebsocket.success\")}</>),\n            \"Processing\": (<>{translate(\"logWebsocket.processing\")} {percentage}% [{current}/{total}]</>)\n        },\n        tooltipColor: {\n            \"Processing\": \"gold\",\n            \"Canceling\": \"gold\",\n            \"Success\": \"green\",\n            \"Error\": \"red\",\n            \"Canceled\": \"red\",\n            \"Connecting\": \"blue\",\n        },\n        modalBody: {\n            \"Processing\": (<>\n                <Result\n                    status=\"warning\"\n                    icon={(<Progress\n                        type=\"dashboard\"\n                        percent={Math.min(percentage, 99.99)}\n                    />)}\n                    title={(<>{translate(\"logWebsocket.processing\")}</>)}\n                    // subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n                    extra={[ <NavLink to={'/tree/' + url} key={'/tree/' + url}>\n                        <Button type=\"primary\" key=\"console\" icon={<BarChartOutlined/>}\n                                loading={downloadingZip}\n                                onClick={hideModal}>\n                            {translate(\"logWebsocket.action.showTree\")}\n                        </Button>,\n                    </NavLink>,\n                        <Button onClick={killProcess} type=\"primary\" key=\"console\" icon={<CloseCircleFilled/>}>\n                            {translate(\"logWebsocket.action.stop\")}\n                        </Button>,\n                        // <Button key=\"buy\">Buy Again</Button>,\n                    ]}\n                />\n                <MyTerminal iqCommand={\"command: \"} stdout={terminalOutput} style={{height: '30px'}} commands={{}}\n                            disabled/>\n            </>),\n            \"Success\": (<>\n                <Result\n                    status=\"success\"\n                    title={(<>{translate(\"logWebsocket.success\")}</>)}\n                    // subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n                    extra={[\n                        <NavLink to={'/tree/' + url} key={'/tree/' + url}>\n                            <Button type=\"primary\" key=\"console\" icon={<BarChartOutlined/>}\n                                    loading={downloadingZip}\n                                    onClick={hideModal}>\n                                {translate(\"logWebsocket.action.showTree\")}\n                            </Button>,\n                        </NavLink>,\n                        <Button type=\"primary\" key=\"console\" icon={<DownloadOutlined/>} onClick={handleDownloadZip}\n                                loading={downloadingZip}>\n                            {downloadingZip ? translate(\"logWebsocket.action.downloading\") : translate(\"logWebsocket.action.download\")}\n                        </Button>\n\n\n                        // <Button key=\"buy\">Buy Again</Button>,\n                    ]}\n                />\n                <MyTerminal iqCommand={\"command: \"} stdout={terminalOutput} style={{height: '30px'}} commands={{}}\n                            disabled/>\n            </>),\n            \"Error\": \"red\",\n            \"Canceled\": (<>\n                <Result\n                    status=\"error\"\n                    icon={(<CloseCircleOutlined/>)}\n                    title={(<>{translate(\"logWebsocket.canceled\")}</>)}\n                    // subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n                    extra={[\n                        // <Button onClick={()=>{onKill(url)}} type=\"primary\" key=\"console\" icon={<StopOutlined />}>\n                        //     {translate(\"logWebsocket.action.cancel\")}\n                        // </Button>,\n                        // <Button key=\"buy\">Buy Again</Button>,\n                    ]}\n                />\n                <MyTerminal iqCommand={\"command: \"} stdout={terminalOutput} style={{height: '30px'}} commands={{}}\n                            disabled/>\n            </>),\n            \"Connecting\": (<>\n                <Result\n                    status=\"warning\"\n                    icon={(<Progress\n                        type=\"dashboard\"\n                        percent={percentage}\n                    />)}\n                    title={(<>{translate(\"logWebsocket.connecting\")}</>)}\n                    // subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n                    // extra={[\n                    //     <Button type=\"primary\" key=\"console\">\n                    //         Go Console\n                    //     </Button>,\n                    //     <Button key=\"buy\">Buy Again</Button>,\n                    // ]}\n                />\n                <MyTerminal iqCommand={\"command: \"} stdout={terminalOutput} style={{height: '30px'}} commands={{}}\n                            disabled/>\n            </>),\n            \"Canceling\": (<>\n                <Result\n                    status=\"warning\"\n                    icon={(<Progress\n                        type=\"dashboard\"\n                        percent={percentage}\n                    />)}\n                    title={(<>{translate(\"logWebsocket.canceling\")}</>)}\n                    // subTitle=\"Order number: 2017182818828182881 Cloud server configuration takes 1-5 minutes, please wait.\"\n                    // extra={[\n                    //     <Button type=\"primary\" key=\"console\">\n                    //         Go Console\n                    //     </Button>,\n                    //     <Button key=\"buy\">Buy Again</Button>,\n                    // ]}\n                />\n                <MyTerminal iqCommand={\"command: \"} stdout={terminalOutput} style={{height: '30px'}} commands={{}}\n                            disabled/>\n            </>),\n        },\n        modalTitle: {\n            \"Connecting\": (<>{translate(\"logWebsocket.connecting\")}</>),\n            \"Canceling\": (<>{translate(\"logWebsocket.canceling\")}</>),\n            \"Error\": (<>{translate(\"logWebsocket.error\")}</>),\n            \"Canceled\": (<>{translate(\"logWebsocket.canceled\")}</>),\n            \"Success\": (<><CheckCircleOutlined\n                size={10}/> {translate(\"logWebsocket.success\") + ' ' + processedFile}</>),\n            \"Processing\": (<>{translate(\"logWebsocket.processing\")} {percentage}% [{current}/{total}]</>)\n        }\n    }\n\n    const updateStatus = (newMes: any) => {\n        if (newMes != null) {\n            setResults([...results, newMes]);\n            let newTotal = total;\n            let newCurrent = current;\n            let newPercentage = parseFloat((newCurrent / newTotal * 100).toFixed(2));\n            newPercentage = isNaN(newPercentage) ? 0 : newPercentage;\n            if (newMes.status == \"Processing\" && status != \"Processing\") {\n                newTotal = 0;\n                newCurrent = 0;\n                newPercentage = 0;\n            }\n            if (newMes.content) {\n                const lines = newMes.content.split('\\n');\n                // console.log(lines);\n                setTerminalOutput([...terminalOutput, ...lines.map((content: string) => {\n                    return {message: content}\n                })])\n                lines.forEach((line: string) => {\n                    if (newTotal == 0) {\n                        const totalKey = \"ModelFinder will test\";\n                        const ins = line.indexOf(totalKey);\n                        if (ins > -1) {\n                            const numbers = line.match(/\\d+/g);\n                            newTotal = (numbers ? parseInt(numbers[0]) : 0);\n                        }\n                    } else {\n                        if (newCurrent < newTotal) {\n                            const words = line.match(/(\"[^\"]+\"|[^\"\\s]+)/g);\n                            // console.log(words);\n                            const number = words ? parseInt(words[0]) : 0;\n                            // console.log(number);\n                            if (!isNaN(number) && number > newCurrent) {\n                                newCurrent = number;\n                            }\n                            // console.log(newCurrent);\n                        }\n                    }\n                })\n                let _percentage = parseFloat((newCurrent / newTotal * 100).toFixed(2));\n                if (_percentage > newPercentage) newPercentage = _percentage;\n            }\n            setPercentage(newPercentage);\n            setTotal(newTotal);\n            setCurrent(newCurrent);\n            if (status == \"Canceled\" && newMes.status == \"Error\") {\n\n            } else {\n                setStatus(newMes.status);\n            }\n            // setStatus('Success');\n        }\n    }\n\n    return (\n        <>\n            <WebSocket logLink={SOCKET_BASE_URL + '/log/' + url} onJson={updateStatus}/>\n            <Tooltip title={statusComponent.tooltip[status]} color={statusComponent.tooltipColor[status]}\n                     autoAdjustOverflow={false} visible={tooltipVisible} onVisibleChange={setTooltipVisible}>\n                <Button size={'large'}\n                        style={{\n                            background: (statusComponent.color[status] ?? statusComponent.color.Error),\n                            color: 'black'\n                        }}\n                        onClick={showModal}>\n                    {/*<div style={{width:'100%'}}  className={'d-flex align-items-center'}>*/}\n                    {statusComponent.indicator[status]}\n                    <div style={{marginLeft: '1rem', marginRight: '1rem', display: 'inline-flex', maxWidth: '150px'}}>\n                        <div style={{\n                            display: 'inline-block',\n                            overflow: 'hidden',\n                            whiteSpace: 'nowrap',\n                            textOverflow: 'ellipsis'\n                        }}> {processedFile} </div>\n                    </div>\n                    {statusComponent.action[status]}\n                    {/*</div>*/}\n                </Button>\n            </Tooltip>\n            <Modal closeIcon={<MinusSquareOutlined/>}\n                   width={'85vw'}\n                   visible={isShow}\n                   centered\n                // title={statusComponent.modalTitle[status]}\n                // onOk={handleOk}\n                   footer={null}\n                   onCancel={handleCancel}\n                // footer={[\n                //     <Button key=\"back\" onClick={handleCancel}>\n                //         Return\n                //     </Button>,\n                //     <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\n                //         Submit\n                //     </Button>,\n                // ]}\n            >\n                {statusComponent.modalBody[status]}\n            </Modal>\n        </>\n    )\n}\n","import React from 'reactn';\nimport './ResultView.scss';\nimport {withRouter} from 'react-router-dom';\nimport {useEffect, useState} from \"react\";\nimport {useResultView} from \"./ResultViewHook\";\nimport {_ResultViewRepository} from \"../../repositories/ResultViewRepository\";\nimport {Log} from \"../../models/Log\";\nimport {useTranslation} from \"react-i18next\";\nimport {LogTab} from \"./LogTab\";\n\n\nfunction ResultView() {\n    const [translate] = useTranslation();\n    const {logs, setLogs} = useResultView();\n    const [, setError] = useState(() => null);\n    const killProcess = (url: string) => {\n        _ResultViewRepository.kill(url).subscribe((logResults: any) => {\n            console.log(logResults);\n        }, error => {\n            // setError(() => {\n            throw error;\n            // });\n        });\n    }\n\n    const deleteTab = (url: string) => {\n        setLogs(logs.filter(value => value.url != url));\n    }\n\n    useEffect(() => {\n        _ResultViewRepository.getAll().subscribe((logResults: Log[]) => {\n            console.log(logResults);\n            setLogs(logResults ?? []);\n        }, error => {\n            setError(() => {\n                throw error;\n            });\n        });\n    }, []);\n    //\n    // useEffect(() =>{\n    //\n    // },[]);\n    console.log(logs);\n    return (<div style={{zIndex: 999, position: 'fixed', bottom: '1vh', right: 0, alignItems: 'flex-end'}}>\n        {logs.map((log) =>\n            <LogTab  {...log} onKill={killProcess} key={log.url + log.id} onDeleteTab={deleteTab}/>\n        )}\n    </div>);\n}\n\n\n// const tabClick = (key: string, event: React.KeyboardEvent | React.MouseEvent) => {\n//     console.log(key, event);\n// }\n\n\nexport default withRouter(ResultView);\n","import React from 'reactn';\nimport 'views/App/App.scss';\nimport {Switch, withRouter} from 'react-router-dom';\nimport {renderRoutes, RouteConfigComponentProps} from 'react-router-config';\nimport {authService} from 'services/auth-service';\nimport {useTranslation} from 'react-i18next';\nimport Spin from 'antd/lib/spin';\nimport Layout from 'antd/lib/layout';\nimport AppMenu from 'components/App/AppMenu/AppMenu';\nimport {routes} from \"../../config/routes\";\nimport ResultView from \"../ResultView/ResultView\";\nimport ResultViewProvider from \"../ResultView/ResultViewHook\";\n\nconst {Content, Footer} = Layout;\n\nfunction App(props: RouteConfigComponentProps) {\n    const {route} = props;\n    const [hasToken, hasUser] = authService.useAutoLogin();\n    const [translate] = useTranslation();\n\n    // const [user] = React.useGlobal<GlobalState, 'user'>('user');\n    // console.info(user);\n    React.useEffect(\n        () => {\n            const rootElement: HTMLDivElement = document.getElementById('root') as HTMLDivElement;\n            rootElement.classList.add('default');\n\n            return function cleanup() {\n                rootElement.classList.remove('default');\n            };\n        },\n        []);\n    // console.log(hasToken, hasUser);\n    if (hasToken && hasUser) {\n        return (\n            <ResultViewProvider>\n                <Layout>\n                    <AppMenu menu={routes[routes.findIndex(r => r.path === '/')].routes}/>\n                    <Layout className=\"site-layout\">\n                        {/*<AppHeader user={user}/>*/}\n                        {/*<Header className=\"site-layout-sub-header-background\" style={{padding: 0}}/>*/}\n                        <Content style={{margin: '0 16px 0', overflow: 'initial', minHeight: 'calc(100vh - 70px)'}}>\n                            <Switch>\n                                {route?.routes instanceof Array && renderRoutes(route.routes)}\n                            </Switch>\n                        </Content>\n                        <Footer style={{textAlign: 'center'}}>IQ-TREE ©2020</Footer>\n                    </Layout>\n                </Layout>\n                <ResultView>\n                </ResultView>\n            </ResultViewProvider>\n        );\n    }\n    return (\n        <Spin tip={translate('login.loggingIn')}/>\n    );\n}\n\nexport default withRouter(App);\n","import {Repository} from 'react3l/core';\nimport {httpConfig} from 'config/http';\nimport {API_BASE_URL} from 'config/consts';\nimport {url} from 'react3l/helpers/path';\nimport {API_GENERATE_TREE_ROUTE} from 'config/api-consts';\nimport nameof from 'ts-nameof.macro';\nimport {kebabCase} from 'react3l/helpers';\nimport {map} from 'rxjs/operators';\nimport {AxiosResponse} from 'axios';\nimport {Observable} from \"rxjs\";\n\nexport type AuthTokenResponse = { accessToken: string; refreshToken: string };\n\nexport class GenerateTreeRepository extends Repository {\n    constructor() {\n        super(httpConfig);\n        console.log(this.baseURL);\n        this.baseURL = url(API_BASE_URL, API_GENERATE_TREE_ROUTE);\n        console.log(this.baseURL);\n    }\n\n\n    public startGenerate(data: any): Observable<any> {\n        return this.httpObservable.post(kebabCase(nameof(this.startGenerate)), data)\n            .pipe(map((response: AxiosResponse) => response.data));\n    }\n}\n\nexport const _GenerateTreeRepository: GenerateTreeRepository = new GenerateTreeRepository();\n","import {Model} from \"react3l/core\";\n\nexport class GenerateTreeRequest extends Model {\n    public InputData?: {\n        AlignmentFile: string,\n        UseExampleAlignmentFile: boolean,\n        SequenceType: string,\n        GeneticCode: string,\n        PartitionFile: string,\n        PartitionType: string\n    }\n    public SubstitutionOption?: {\n        SubstitutionModel: string,\n        FreeRateHeterogeneity: string,\n        RateHeterogeneity: string,\n        RateCategory: number,\n        StateFrequency: string,\n        AscertainmentCorrection: string\n    }\n    public BranchSupportAnalysis?: {\n        BootstrapAnalysis: string,\n        NumberBootstrap: string,\n        CreateUfBootFile: string,\n        MaxIteration: string,\n        MinCorrelation: string,\n        SingleBranchTest: {\n            SHaLRTTest: string,\n            Replicates: string,\n            ApproximateBayes: string\n        }\n    }\n    public SearchParameters?: {\n        PerturbationStrength: string,\n        StoppingRule: string\n    }\n}\n","import React, {Fragment} from 'react';\nimport './CustomForm.scss';\nimport {Button, Checkbox as AntCheckBox, Collapse, Form, Input, InputNumber, Radio, Select, Switch, Upload} from \"antd\";\nimport {InboxOutlined} from '@ant-design/icons';\nimport nextId from \"react-id-generator\";\n\nconst {Panel} = Collapse;\n\nconst AddColon = (label: string) => (label + ': ');\n\nconst File = ({name, label, value, onChange, action = \"\", directory = false, disabled = false, beforeUpload = () => false, multiple = false}\n                  : { action?: string, name: string, label: string; value: string, disabled?: boolean, onChange?: any, directory?: boolean, beforeUpload?: any, multiple?: boolean }) => {\n    return (<Form.Item label={AddColon(label)} name={name} valuePropName=\"file\">\n        <Upload action={action} directory={directory} onChange={onChange} disabled={disabled}\n                beforeUpload={beforeUpload} multiple={multiple}>\n            <Button disabled={disabled}>\n                <InboxOutlined/> {value}\n            </Button>{/*<p className=\"ant-upload-drag-icon\">*/}\n            {/*<InboxOutlined/>*/}\n            {/*</p>*/}\n            {/*<p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>*/}\n        </Upload>\n        {/*<Upload.Dragger >*/}\n        {/*    <Button>*/}\n        {/*        <UploadOutlined/> {value}*/}\n        {/*    </Button>*/}\n        {/*</Upload.Dragger>*/}\n    </Form.Item>)\n}\n\nconst Toggle = ({label, name, onChange, disabled = false}: { label: string, name: string, disabled?: boolean, onChange?: any }) => {\n    return (\n        <Form.Item label={AddColon(label)} name={name} valuePropName=\"checked\">\n            <Switch onChange={onChange} disabled={disabled}/>\n        </Form.Item>\n    )\n}\n\nconst RadioGroup = ({label, name, values, onChange, disabled = false}: { disabled?: boolean, onChange?: any, name: string, label: string, values: { value: string, label: string }[] }) => {\n    return (\n        <Form.Item label={AddColon(label)} name={name}>\n            <Radio.Group onChange={onChange} disabled={disabled}>\n                {values.map(value => (\n                    <Radio.Button value={value.value} key={value.value}>{value.label}</Radio.Button>))}\n            </Radio.Group>\n        </Form.Item>\n    )\n}\n\n\nconst CheckBoxGroup = ({label, values, name, onChange, disabled = false}: { disabled?: boolean, onChange?: any, name: string, label: string, values: { value: string, label: string }[] }) => {\n    return (\n        <Form.Item label={AddColon(label)} name={name}>\n            <AntCheckBox.Group options={values} onChange={onChange} disabled={disabled}/>\n        </Form.Item>\n    )\n}\nconst CheckBox = ({label, name, onChange, disabled = false, value}: { disabled?: boolean, onChange?: any, name: string, label: string, value: { label: string } }) => {\n    return (\n        <Form.Item label={AddColon(label)} name={name} valuePropName=\"checked\">\n            <AntCheckBox onChange={onChange} disabled={disabled}>{value.label}</AntCheckBox>\n        </Form.Item>\n    )\n}\n\nconst SelectGroup = ({label, values, name, onChange, disabled = false}: { disabled?: boolean, onChange?: any, name: string, label: string, values: { value: string, label?: string }[] }) => {\n    return (\n        <Form.Item label={AddColon(label)} name={name}>\n            <Select onChange={onChange} disabled={disabled}>\n                {values.map(vl => (\n                    <Select.Option value={vl.value} key={vl.value}>{vl.label ? vl.label : vl.value}</Select.Option>))}\n            </Select>\n        </Form.Item>\n    )\n}\n\nconst InputText = (label: string, props: any) => {\n    return (\n        <Form.Item label={AddColon(label)}>\n            <Input {...props}>\n            </Input>\n        </Form.Item>\n    )\n}\n\nconst Inputnumberr = ({label, rules, name, onChange, disabled = false}: { disabled?: boolean, onChange?: any, name: string, label: string, rules: any }) => {\n    return (\n        <Form.Item label={AddColon(label)} name={name} rules={rules}>\n            <InputNumber onChange={onChange} disabled={disabled}>\n            </InputNumber>\n        </Form.Item>\n    )\n}\n\n\nexport function CustomForm({onFieldsChange, parentName = \"\", parentDataStructure, path = []}: { onFieldsChange?: any, parentName?: any, data?: any, parentDataStructure: any, path?: string[] }) {\n    // console.log(data);\n    // console.log(parentName);\n    const dataStructure = parentDataStructure[parentName] ?? parentDataStructure;\n    // console.log(dataStructure);\n    let parentComponent = dataStructure.parentComponent;\n    // console.log(ParentComponent);\n    // console.log(dataStructure);\n    const myForm = (): JSX.Element => (<Fragment key={nextId()}>\n        {Object.keys(dataStructure).map(name => {\n            if (name == 'label' || name == 'parentComponent') {\n                // console.log(name, 1);\n                return null;\n            }\n            if (name.indexOf(\"decorate\") > -1) {\n                // console.log(name, 2);\n                return dataStructure[name];\n            }\n            if (!dataStructure[name].type) {\n                // console.log(name, 3);\n                if ((typeof dataStructure[name]) == 'string' || Object.keys(dataStructure[name]).length == 0) {\n                    throw new Error(\"config \" + name + \":\" + JSON.stringify(parentDataStructure));\n                }\n                // console.log(name, 4);\n                const newPath = parentName == \"\" ? [...path] : [...path, parentName];\n                // console.log(newPath, 5);\n                return CustomForm({\n                    onFieldsChange: onFieldsChange,\n                    parentName: name,\n                    parentDataStructure: dataStructure,\n                    path: newPath\n                });\n            }\n            if (dataStructure[name].type == 'Toggle') {\n                return (<Toggle {...dataStructure[name]} name={[...path, parentName, name]} key={nextId()}/>)\n            }\n            if (dataStructure[name].type == 'File') {\n                return (<File {...dataStructure[name]} name={[...path, parentName, name]} key={nextId()}/>)\n            }\n            if (dataStructure[name].type == 'RadioGroup') {\n                return (<RadioGroup {...dataStructure[name]} name={[...path, parentName, name]} key={nextId()}/>)\n            }\n            if (dataStructure[name].type == 'SelectGroup') {\n                return (<SelectGroup {...dataStructure[name]} name={[...path, parentName, name]} key={nextId()}/>)\n            }\n            if (dataStructure[name].type == 'InputNumber') {\n                return (<Inputnumberr {...dataStructure[name]} name={[...path, parentName, name]} key={nextId()}/>)\n            }\n            if (dataStructure[name].type == 'CheckBoxGroup') {\n                return (<CheckBoxGroup {...dataStructure[name]} name={[...path, parentName, name]} key={nextId()}/>)\n            }\n            if (dataStructure[name].type == 'CheckBox') {\n                return (<CheckBox {...dataStructure[name]} name={[...path, parentName, name]} key={nextId()}/>)\n            }\n        })}\n    </Fragment>);\n    return (parentComponent ? parentComponent(myForm) : myForm());\n}\n\nconst normFile = (e: any) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n        return e;\n    }\n    return e && e.fileList;\n};","import React from 'reactn';\nimport './GenerateTree.scss';\nimport {withRouter} from 'react-router-dom';\nimport {Button, Collapse, Form} from \"antd\";\nimport {CaretRightOutlined} from '@ant-design/icons';\nimport {useTranslation} from \"react-i18next\";\nimport {_GenerateTreeRepository} from \"../../repositories/GenerateTreeRepository\";\nimport {useForm} from \"antd/es/form/Form\";\nimport {useResultView} from \"../ResultView/ResultViewHook\";\nimport {GenerateTreeRequest} from \"../../models/GenerateTreeRequest\";\nimport {CustomForm} from \"../../components/Form/CustomForm\";\nimport nextId from \"react-id-generator\";\nimport {useState} from \"react\";\n\nconst {Panel} = Collapse;\n\nfunction GenerateTree() {\n    const [translate] = useTranslation();\n    const [form] = useForm();\n    // const [alignment, setAlignment] = useState();\n    const {logs, appendLog, removeLog} = useResultView();\n    const startGenerate = (form: any) => {\n        console.log(form.getFieldsValue());\n        let formData = new FormData();\n        if (!useExampleFile) formData.append(\"alignment\", form.getFieldsValue().inputData.alignmentFile.file);\n        formData.append(\"data\", JSON.stringify(form.getFieldsValue()));\n        _GenerateTreeRepository.startGenerate(formData).subscribe(x => {\n            x.visible = true;\n            x.id = nextId();\n            appendLog(x);\n        }, error => {\n            throw new Error(error);\n        });\n    }\n    const r = new GenerateTreeRequest();\n    r.BranchSupportAnalysis = {\n        CreateUfBootFile: \"\",\n        MaxIteration: \"\",\n        MinCorrelation: \"\",\n        NumberBootstrap: \"\",\n        SingleBranchTest: {ApproximateBayes: \"\", Replicates: \"\", SHaLRTTest: \"\"},\n        BootstrapAnalysis: \"sadsd\"\n    };\n    r.InputData = {\n        AlignmentFile: \"\",\n        GeneticCode: \"\",\n        PartitionFile: \"\",\n        PartitionType: \"\",\n        SequenceType: \"\",\n        UseExampleAlignmentFile: true\n    }\n    r.SubstitutionOption = {\n        AscertainmentCorrection: \"\",\n        FreeRateHeterogeneity: \"\",\n        RateCategory: 4,\n        RateHeterogeneity: \"\",\n        StateFrequency: \"\",\n        SubstitutionModel: \"\"\n    }\n    r.SearchParameters = {PerturbationStrength: \"\", StoppingRule: \"\"}\n    const [useExampleFile, setUseExampleFile] = useState(false);\n    const LabelData = {\n        inputData: {\n            parentComponent: (child: any) => {\n                return (<Panel header={`1. ` + translate('generateTree.InputData.Label').toUpperCase()} key={1}\n                               className=\"site-collapse-custom-panel\">{child()}</Panel>)\n            },\n            alignmentFile: {\n                type: 'File',\n                label: translate('generateTree.InputData.AlignmentFile'),\n                value: translate('generateTree.InputData.AlignmentFileInT'),\n                onChange: () => {\n                    console.log(form.getFieldsValue())\n                },\n                disabled: useExampleFile\n            },\n            useExampleAlignmentFile: {\n                type: 'Toggle',\n                label: translate('generateTree.InputData.UseExampleAlignmentFile'),\n                onChange: (e: any) => {\n                    console.log(e);\n                    setUseExampleFile(e);\n                    console.log(form.getFieldsValue())\n                }\n            },\n            sequenceType: {\n                type: 'RadioGroup',\n                label: translate('generateTree.InputData.SequenceType.Label'),\n                values: [\n                    {value: 'AUTO', label: translate('generateTree.InputData.SequenceType.autoDetect')},\n                    {value: 'DNA', label: translate('generateTree.InputData.SequenceType.dNA')},\n                    {value: 'AA', label: translate('generateTree.InputData.SequenceType.protein')},\n                    {value: 'CODON', label: translate('generateTree.InputData.SequenceType.codon')},\n                    {value: 'NT2AA', label: translate('generateTree.InputData.SequenceType.dna2Aa')},\n                    {value: 'BIN', label: translate('generateTree.InputData.SequenceType.binary')},\n                    {value: 'MORPH', label: translate('generateTree.InputData.SequenceType.morphology')}\n                ],\n                onChange: () => {\n                    console.log(form.getFieldsValue())\n                },\n            },\n            geneticCode: {\n                type: 'SelectGroup',\n                label: translate('generateTree.InputData.GeneticCode.Label'),\n                values: [\n                    {value: '0', label: translate('generateTree.InputData.GeneticCode.autoDetect')},\n                    {value: '1', label: translate('generateTree.InputData.GeneticCode.dNA')},\n                    {value: '2', label: translate('generateTree.InputData.GeneticCode.protein')},\n                    {value: '3', label: translate('generateTree.InputData.GeneticCode.codon')},\n                    {value: '4', label: translate('generateTree.InputData.GeneticCode.dna2Aa')}\n                ],\n                onChange: () => {\n                    console.log(form.getFieldsValue())\n                }\n            },\n            partitionFile: {\n                type: 'File',\n                label: translate('generateTree.InputData.PartitionFile'),\n                value: translate('generateTree.InputData.PartitionFileInT'),\n                onChange: () => {\n                    console.log(form.getFieldsValue())\n                }\n            },\n            partitionType: {\n                type: 'RadioGroup',\n                label: translate('generateTree.InputData.PartitionType.Label'),\n                values: [\n                    {value: '0', label: translate('generateTree.InputData.PartitionType.EdgeLinked')},\n                    {value: '1', label: translate('generateTree.InputData.PartitionType.EdgeUnlinked')},\n                ],\n                onChange: () => {\n                    console.log(form.getFieldsValue())\n                }\n            }\n        },\n        substitutionOption: {\n            parentComponent: (child: any) => {\n                return (<Panel header={`2. ` + translate('generateTree.SubstitutionOption.Label').toUpperCase()} key={2}\n                               className=\"site-collapse-custom-panel\">{child()}</Panel>)\n            },\n            substitutionModel: {\n                type: 'SelectGroup',\n                label: translate('generateTree.SubstitutionOption.SubstitutionModel.Label'),\n                values: [{value: \"Auto\"}, {value: \"---Binary---\"}, {value: \"JC2\"}, {value: \"GTR2\"}, {value: \"---DNA---\"},\n                    {value: \"JC\"},\n                    {value: \"F81\"}, {value: \"K80\"}, {value: \"HKY\"}, {value: \"TNe\"}, {value: \"TN\"}, {value: \"K81\"},\n                    {value: \"K81u\"}, {value: \"TPM2\"}, {value: \"TPM2u\"}, {value: \"TPM3\"}, {value: \"TPM3u\"},\n                    {value: \"TIMe\"}, {value: \"TIM\"}, {value: \"TIM2e\"}, {value: \"TIM2\"}, {value: \"TIM3e\"},\n                    {value: \"TIM3\"}, {value: \"TVMe\"}, {value: \"TVM\"}, {value: \"SYM\"}, {value: \"GTR\"},\n                    {value: \"---Protein---\"}, {value: \"Blosum62\"}, {value: \"cpREV\"}, {value: \"Dayhoff\"},\n                    {value: \"DCMut\"}, {value: \"FLU\"}, {value: \"HIVb\"}, {value: \"HIVw\"}, {value: \"JTT\"},\n                    {value: \"JTTDCMut\"}, {value: \"LG\"}, {value: \"mtART\"}, {value: \"mtMAM\"}, {value: \"mtREV\"},\n                    {value: \"mtZOA\"}, {value: \"PMB\"}, {value: \"rtREV\"}, {value: \"VT\"}, {value: \"WAG\"},\n                    {value: \"---Mixture model---\"}, {value: \"LG4M\"}, {value: \"LG4X\"}, {value: \"JTT+CF4\"},\n                    {value: \"C10\"}, {value: \"C20\"}, {value: \"EX2\"}, {value: \"EX3\"}, {value: \"EHO\"}, {value: \"UL2\"},\n                    {value: \"UL3\"}, {value: \"EX_EHO\"}, {value: \"---Codon---\"}, {value: \"GY\"}, {value: \"MG\"}, {value: \"MGK\"},\n                    {value: \"GY0K\"}, {value: \"GY1KTS\"}, {value: \"GY1KTV\"}, {value: \"GY2K\"}, {value: \"MG1KTS\"}, {value: \"MG1KTV\"},\n                    {value: \"MG2K\"}, {value: \"KOSI07\"}, {value: \"SCHN05\"}, {value: \"---Morphology---\"}, {value: \"MK\"}, {value: \"ORDERED\"}]\n            },\n            freeRateHeterogeneity: {\n                type: 'CheckBox',\n                label: translate('generateTree.SubstitutionOption.FreeRateHeterogeneity.Label'),\n                value: {label: translate('generateTree.SubstitutionOption.FreeRateHeterogeneity.R')}\n                // value: translate()\n            },\n            rateHeterogeneityOptions: {\n                type: 'CheckBoxGroup',\n                label: translate('generateTree.SubstitutionOption.RateHeterogeneityOptions.Label'),\n                values: [\n                    {value: 'G', label: translate('generateTree.SubstitutionOption.RateHeterogeneityOptions.G')},\n                    {value: 'I', label: translate('generateTree.SubstitutionOption.RateHeterogeneityOptions.I')}\n                ]\n            },\n            rateCategory: {\n                type: 'InputNumber',\n                label: translate('generateTree.SubstitutionOption.RateCategory.Label'),\n                rules: [{\n                    message: 'Abc',\n                    // defaultValue: 4,\n                    // step:0.5,\n                    // min: 2,\n                    // max: 64,\n                    required: true,\n                }]\n            },\n            stateFrequency: {\n                type: 'RadioGroup',\n                label: translate('generateTree.SubstitutionOption.StateFrequency.Label'),\n                values: [\n                    {value: 'Empirical', label: translate('generateTree.SubstitutionOption.StateFrequency.Empirical')},\n                    {value: 'AAModel', label: translate('generateTree.SubstitutionOption.StateFrequency.AAModel')},\n                    {\n                        value: 'MLOptimized',\n                        label: translate('generateTree.SubstitutionOption.StateFrequency.MLOptimized')\n                    },\n                    {value: 'CodonF1x4', label: translate('generateTree.SubstitutionOption.StateFrequency.CodonF1x4')},\n                    {value: 'CodonF3x4', label: translate('generateTree.SubstitutionOption.StateFrequency.CodonF3x4')}\n                ]\n            },\n            ascertainmentCorrection: {\n                type: 'CheckBox',\n                label: translate('generateTree.SubstitutionOption.AscertainmentCorrection.Label'),\n                value: {label: translate('generateTree.SubstitutionOption.AscertainmentCorrection.ASC')}\n                // values: [\n                //     {value: '0', label: translate('generateTree.SubstitutionOption.AscertainmentCorrection.ASC')}\n                // ]\n            }\n        },\n        branchSupportAnalysis: {\n            parentComponent: (child: any) => {\n                return (\n                    <Panel header={`3. ` + translate('generateTree.BranchSupportAnalysis.Label').toUpperCase()} key={3}\n                           className=\"site-collapse-custom-panel\">{child()}</Panel>)\n            },\n            bootstrapAnalysis: {\n                type: 'RadioGroup',\n                label: translate('generateTree.BranchSupportAnalysis.BootstrapAnalysis.Label'),\n                values: [\n                    {value: '0', label: translate('generateTree.BranchSupportAnalysis.BootstrapAnalysis.None')},\n                    {value: '1', label: translate('generateTree.BranchSupportAnalysis.BootstrapAnalysis.UltraFast')},\n                    {value: '2', label: translate('generateTree.BranchSupportAnalysis.BootstrapAnalysis.Standard')},\n                ]\n            },\n            numberBootstrap: {\n                type: 'InputNumber',\n                label: translate('generateTree.BranchSupportAnalysis.NumberBootstrap.Label'),\n                rules: [{\n                    // defaultValue: 1000,\n                    min: 100,\n                    type: 'number',\n                    max: 1000,\n                    // step: 100\n                }]\n            },\n            createUfBootFile: {\n                type: 'CheckBox',\n                label: translate('generateTree.BranchSupportAnalysis.CreateUfBootFile.Label'),\n                value: {label: translate('generateTree.BranchSupportAnalysis.CreateUfBootFile.Yes')}\n            },\n            maxIteration: {\n                type: 'InputNumber',\n                label: translate('generateTree.BranchSupportAnalysis.MaxIteration.Label'),\n                rules: [{\n                    defaultValue: 1000,\n                    min: 1000,\n                    step: 100\n                }]\n            },\n            minCorrelation: {\n                type: 'InputNumber',\n                label: translate('generateTree.BranchSupportAnalysis.MinCorrelation.Label'),\n                rules: [{\n                    initialValue: 0.99,\n                    min: 0,\n                    step: 0.01\n                }]\n            },\n            singleBranchTest: {\n                decorate: (\n                    <p key={nextId()}>{translate('generateTree.BranchSupportAnalysis.SingleBranchTest.Label')}</p>),\n                sHaLRTTest: {\n                    type: 'Toggle',\n                    label: translate('generateTree.BranchSupportAnalysis.SingleBranchTest.SHaLRTTest'),\n                },\n                replicates: {\n                    type: 'InputNumber',\n                    label: translate('generateTree.BranchSupportAnalysis.SingleBranchTest.Replicates'),\n                    rules: [{\n                        defaultValue: 1000,\n                        min: 1000,\n                        max: 10000\n                    }]\n                },\n                approximateBayes: {\n                    type: 'CheckBox',\n                    label: translate('generateTree.BranchSupportAnalysis.SingleBranchTest.ApproximateBayes.Label'),\n                    value: {\n                        label: translate('generateTree.BranchSupportAnalysis.SingleBranchTest.ApproximateBayes.Yes')\n                    }\n                }\n            }\n        },\n        searchParameters: {\n            parentComponent: (child: any) => {\n                return (\n                    <Panel header={`4. ` + translate('generateTree.SearchParameters.Label').toUpperCase()} key={4}\n                           className=\"site-collapse-custom-panel\">{child()}</Panel>)\n            },\n            perturbationStrength: {\n                type: 'InputNumber',\n                label: translate('generateTree.SearchParameters.PerturbationStrength.Label'),\n                rules: [{\n                    required: true,\n                    message: 'abccc',\n                    defaultValue: 0.5,\n                    min: 0,\n                    step: 0.1,\n                    max: 1\n                }]\n            },\n            stoppingRule: {\n                type: 'InputNumber',\n                label: translate('generateTree.SearchParameters.StoppingRule.Label'),\n                rules: [{\n                    defaultValue: 100,\n                    min: 100,\n                    step: 10\n                }]\n            }\n        },\n        generate: {\n            label: translate('generateTree.Generate.Label')\n        }\n    }\n    return (\n        <Form form={form} initialValues={r}>\n            <Collapse\n                bordered={true} accordion={true}\n                defaultActiveKey={[1]}\n                expandIcon={({isActive}) => <CaretRightOutlined rotate={isActive ? 90 : 0}/>}\n                className=\"site-collapse-custom-collapse\">\n                {CustomForm({onFieldsChange: console.log, parentDataStructure: LabelData})}\n            </Collapse>\n            <Button onClick={() => startGenerate(form)}\n                    type={\"primary\"}>{LabelData.generate.label.toUpperCase()}</Button>\n        </Form>\n    );\n}\n\nexport default withRouter(GenerateTree);\n","const parse = (s: any) => {\n    const ancestors = []\n    let tree:any = {}\n    const nomalizeString = s.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n    const tokens = nomalizeString.split(/\\s*([;(),:])\\s*/)\n    let subtree\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i]\n        switch (token) {\n            case '(': // new branchset\n                subtree = {}\n                tree.branchset = [subtree]\n                ancestors.push(tree)\n                tree = subtree\n                break\n            case ',': // another branch\n                subtree = {}\n                ancestors[ancestors.length - 1].branchset.push(subtree)\n                tree = subtree\n                break\n            case ')': // optional name next\n                tree = ancestors.pop()\n                break\n            case ':': // optional length next\n                break\n            default:\n                const x = tokens[i - 1]\n\n                if (x === ')' || x === '(' || x === ',') {\n                    tree.name = token\n                } else if (x === ':') {\n                    tree.length = parseFloat(token)\n                }\n        }\n    }\n\n    return tree\n}\n\nexport default parse\n","import {Repository} from 'react3l/core';\nimport {httpConfig} from 'config/http';\nimport {API_BASE_URL} from 'config/consts';\nimport {url} from 'react3l/helpers/path';\nimport {API_TREE_VIEW} from 'config/api-consts';\nimport nameof from 'ts-nameof.macro';\nimport {kebabCase} from 'react3l/helpers';\nimport {map} from 'rxjs/operators';\nimport {AxiosResponse} from 'axios';\nimport {Observable} from \"rxjs\";\nimport {Log} from \"../models/Log\";\n\nexport type AuthTokenResponse = { accessToken: string; refreshToken: string };\n\nexport class TreeViewRepository extends Repository {\n    constructor() {\n        super(httpConfig);\n        console.log(this.baseURL);\n        this.baseURL = url(API_BASE_URL, API_TREE_VIEW);\n        console.log(this.baseURL);\n    }\n\n\n    // public getAll(): Observable<Log[]> {\n    //     return this.httpObservable.get(kebabCase(nameof(this.getAll)))\n    //         .pipe(map((response: AxiosResponse) => response.data));\n    // }\n\n    public get(url: string): Observable<any> {\n        return this.httpObservable.get(url)\n            .pipe(map((response: AxiosResponse) => response.data));\n    }\n}\n\nexport const _TreeViewRepository: TreeViewRepository = new TreeViewRepository();\n","import React from 'reactn';\nimport './TreeView.scss';\nimport {withRouter} from 'react-router-dom';\nimport parse from \"../../newick/tools/parse\";\nimport {useEffect, useState} from \"react\";\nimport Tree from 'react-d3-tree';\nimport {_TreeViewRepository} from \"../../repositories/TreeViewRepository\";\nimport {ExpandOutlined, ZoomInOutlined, ZoomOutOutlined} from '@ant-design/icons';\nimport {Button} from \"antd\";\nimport {useTranslation} from \"react-i18next\";\n\nconst convertTree = (tree: any) => {\n    const children = tree.branchset ? tree.branchset.map(convertTree) : [];\n    const attributes = {\"\": tree.length};\n    // const attributes = {};\n    const name = tree.name;\n    return {name, attributes, children};\n}\n\nfunction TreeView({match}: any) {\n    const [translate] = useTranslation();\n    const [treeData, setTreeData] = useState({});\n    const [zoom, setZoom] = useState(0.9);\n    const [translatePosition, setTranslate] = useState({x: 0, y: 0});\n    const [visibility, setVisibility] = useState(\"hidden\" as any);\n    const [pathFunction, setPathFunction] = useState(\"straight\" as any);\n    const treeRef: any = React.createRef();\n    const nodeSvgShape = {\n        shape: 'circle',\n        shapeProps: {\n            r: 10,\n        },\n    }\n    const center = () => {\n        setTranslate({\n            x: treeRef.current.offsetWidth / 7 + Math.random(),\n            y: treeRef.current.offsetHeight / 2 + Math.random()\n        });\n    }\n    const zoomIn = () => {\n        setZoom(zoom + 0.1);\n    }\n    const zoomOut = () => {\n        setZoom(zoom - 0.1);\n    }\n    useEffect(() => {\n        setTreeData({});\n        center();\n        let tempData = \"\";\n        const loop = () => {\n            _TreeViewRepository.get(match.params.urlId).subscribe((tree: any) => {\n                if (tree.data) {\n                    if (tempData != tree.data) {\n                        console.log(tempData);\n                        tempData = tree.data;\n                        let convertedTree = convertTree(parse(tree.data));\n                        setTreeData(convertedTree);\n                        setPathFunction(\"step\");\n                        setVisibility(\"visible\");\n                    }\n                }\n                setTimeout(loop, 1000);\n            });\n        }\n        loop();\n    }, [match.params.urlId]);\n    const style = {\n        nodes: {\n            node: {\n                circle: {\n                    fill: '#52e2c5',\n                },\n                attributes: {\n                    stroke: '#000',\n                },\n            },\n            leafNode: {\n                circle: {\n                    fill: 'white',\n                },\n                attributes: {\n                    stroke: '#000',\n                },\n            },\n        },\n    }\n    return (<div style={{visibility: visibility, height: \"calc(100vh - 70px)\"}} ref={treeRef}>\n        <div style={{width: \"130px\", position: \"absolute\", right: \"30px\", top: \"30px\"}}>\n            <Button icon={<ExpandOutlined/>} block onClick={center}>{translate(\"tree.centre\")}</Button>\n            <Button icon={<ZoomInOutlined/>} block onClick={zoomIn}>{translate(\"tree.zoomIn\")}</Button>\n            <Button icon={<ZoomOutOutlined/>} block onClick={zoomOut}>{translate(\"tree.zoomOut\")}</Button></div>\n        <Tree styles={style} translate={translatePosition} data={treeData} pathFunc={pathFunction}\n              scaleExtent={{min: 0.1, max: 10}} nodeSvgShape={nodeSvgShape} zoom={zoom}\n              separation={{siblings: 0.4, nonSiblings: 0.8}}/>\n    </div>)\n}\n\nexport default withRouter(TreeView);\n","import {RouteConfig} from 'react-router-config';\nimport {LOGIN_ROUTE} from 'config/route-consts';\nimport LoginView from 'views/LoginView/LoginView';\nimport App from 'views/App/App';\nimport GenerateTree from \"views/GenerateTree/GenerateTree\";\nimport React from \"react\";\nimport {AreaChartOutlined, BranchesOutlined, ExperimentOutlined, HomeOutlined} from '@ant-design/icons';\nimport TreeView from \"../views/TreeView/TreeView\";\nimport {translate} from \"react3l/helpers\";\n\nexport const routes: RouteConfig[] = [\n    {\n        name: \"Login\",\n        path: LOGIN_ROUTE,\n        component: LoginView,\n        display: false,\n    },\n    {\n        name: \"Home\",\n        path: '/',\n        component: App,\n        display: true,\n        routes: [\n            {\n                name: \"Home\",\n                path: '.',\n                routes: [],\n                icon: <HomeOutlined/>,\n                exact: true,\n                display: true\n            },\n            {\n                name: \"Generate Tree\",\n                path: '/generateTree',\n                component: GenerateTree,\n                routes: [],\n                icon: <BranchesOutlined/>,\n                display: true\n            },\n            {\n                name: \"Tree\",\n                path: '/tree/:urlId',\n                component: TreeView,\n                // routes: [],\n                icon: <AreaChartOutlined/>,\n                display: false\n            },\n            {\n                name: \"Test\",\n                path: '/test',\n                icon: <ExperimentOutlined/>,\n                routes: [\n                    {\n                        name: translate('routes.generateTreetest'),\n                        path: '/generateTree',\n                        component: GenerateTree,\n                        routes: [],\n                        icon: <ExperimentOutlined/>,\n                        display: true\n                    }, {\n                        name: translate('routes.tasdestestt'),\n                        path: '/test',\n                        routes: [],\n                        icon: <ExperimentOutlined/>,\n                        display: true\n                    }],\n                display: true\n            }],\n    }\n];\n","import nameof from 'ts-nameof.macro';\nimport {User} from 'models/User';\n\nexport interface GlobalState {\n  language: string;\n\n  accessToken: string | null;\n\n  refreshToken: string | null;\n\n  user?: User;\n}\n\nconst initialGlobalState: GlobalState = {\n  language: 'en',\n  accessToken: localStorage.getItem(nameof((this as any).accessToken)),\n  refreshToken: localStorage.getItem(nameof((this as any).refreshToken)),\n  user: undefined,\n};\n\nexport default initialGlobalState;\n","import React from 'react';\nimport './LoadingScreen.scss';\nimport Spin from 'antd/lib/spin';\n\nfunction LoadingScreen() {\n    return (\n        <div className={\"loading\"}>\n            <div style={{textAlign: \"center\"}}>\n                <div>\n                    <Spin/> <Spin/> <Spin/> <Spin/> <Spin/> <Spin/>\n                </div>\n                <div>\n                    Loading app...\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LoadingScreen;\n","import React, {Component, SuspenseProps} from 'react';\n\nexport default class ErrorBoundary extends Component<SuspenseProps> {\n    state = {hasError: null, error: null};\n\n    static getDerivedStateFromError(error: any) {\n        return {\n            hasError: true,\n            error\n        };\n    }\n\n    componentDidCatch(error: Error) {\n        this.setState({\n            hasError: true,\n            error\n        });\n    }\n\n    render() {\n        const Fallback: any = this.props.fallback;\n        if (this.state.hasError) {\n            return (<Fallback error={this.state.error}/>);\n        }\n        return this.props.children;\n    }\n}\n\n","import React from 'react';\nimport './ErrorScreen.scss';\nimport {Button, Result} from \"antd\";\nimport {useTranslation} from \"react-i18next\";\nimport {isValidNumber} from \"react3l/helpers\";\n\nfunction ErrorScreen({error}: any) {\n    const [translate] = useTranslation();\n    const status = isValidNumber(error.message) ? error.message : \"500\";\n    let message = error.message;\n    switch (message){\n        case \"404\": message = translate(\"error.404\");\n    }\n    return <Result\n        status={status}\n        title=\"Error\"\n        subTitle=\"Sorry, something went wrong.\"\n        extra={<><Button type=\"primary\" onClick={() => window.location.reload()}>Reload</Button>\n            <p>{error.message}</p></>}\n    />\n}\n\nexport default ErrorScreen;\n","import React from 'reactn';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch} from 'react-router-dom';\nimport * as serviceWorker from 'service-worker';\nimport {renderRoutes} from 'react-router-config';\nimport {routes} from 'config/routes';\nimport initialGlobalState, {GlobalState} from 'config/global-state';\nimport addDevTools from 'reactn-devtools';\nimport {IS_DEVELOPMENT} from 'config/consts';\nimport LoadingScreen from 'components/LoadingScreen/LoadingScreen';\nimport './styles';\nimport {translationService} from 'react3l/services';\nimport {TranslationRepository} from \"react3l/repositories\";\nimport ErrorBoundary from \"./components/ErrorBoundary/ErrorBoundary\";\nimport ErrorScreen from \"./components/ErrorScreen/ErrorScreen\";\nimport {I18N_ROUTE} from \"./config/route-consts\";\nimport translationEN from \"./i18nn/en.json\";\nimport translationVI from \"./i18nn/vi.json\";\n\nTranslationRepository.baseURL = I18N_ROUTE;\nconst AppEntry = React.lazy(async () => {\n    console.log(\"AppEntry\");\n    /**\n     * Add ReactN devTools in development\n     */\n    if (IS_DEVELOPMENT) {\n        addDevTools();\n    }\n    /**\n     * Setup global state\n     */\n    await React.setGlobal<GlobalState>(initialGlobalState);\n    /**\n     * Setup translation\n     */\n    await translationService.initTranslation();\n    await translationService.addResource('vi', translationVI);\n    await translationService.addResource('en', translationEN);\n    await translationService.changeLanguage('en');\n    /**\n     * Return the main component\n     */\n    return {\n        default: function AppEntry() {\n            return (\n                <Switch>\n                    {renderRoutes(routes)}\n                </Switch>\n            )\n        },\n    };\n});\n\nReactDOM.render(\n    <ErrorBoundary fallback={ErrorScreen}>\n        <BrowserRouter>\n            <React.Suspense fallback={<LoadingScreen/>}>\n                <AppEntry/>\n            </React.Suspense>\n        </BrowserRouter>\n    </ErrorBoundary>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (IS_DEVELOPMENT) {\n    serviceWorker.unregister();\n} else {\n    serviceWorker.register();\n}\n"],"sourceRoot":""}